import os
import glob
import pandas as pd
from snakemake.utils import min_version

min_version('5.26.1')

#container: 'continuumio/miniconda3:4.9.1'

configfile: '../config/config.yaml'

SAMPLES = pd.read_table(config['samples'])['Sample'].tolist()
CHROMOSOMES = pd.read_table(config['chromosomes'], header=None).iloc[:,0].tolist()

TMPDIR = config['paths']['temp_dir']
RAW_READ_DIR = '{0}/raw_fastq'.format(config['data_prefix'])
TRIMMED_READ_DIR = '{0}/trimmed_reads'.format(config['data_prefix'])
QC_DIR = '{0}/qc'.format(config['results_prefix'])
BAM_DIR = '{0}/bam'.format(config['results_prefix'])
VARIANT_DIR = '{0}/variants'.format(config['results_prefix'])
PROGRAM_RESOURCE_DIR = '{0}/program_resources'.format(config['results_prefix'])

REFERENCE_GENOME = config['files']['reference_genome']

REPRESENTATIVE_SAMPLE = config['variant_calling']['sample']
NODES_PER_CHROM = config['variant_calling']['nodes_per_chrom']
CORES_PER_NODE = config['variant_calling']['cores_per_node']
NODES = ['node{0:0=2d}'.format(x + 1) for x in range(NODES_PER_CHROM)]
if NODES_PER_CHROM == 1:
    NUM_REGIONS_PER_CHROM = CORES_PER_NODE
elif NODES_PER_CHROM > 1:
    NUM_REGIONS_PER_CHROM = NODES_PER_CHROM * CORES_PER_NODE

wildcard_constraints:
    chrom='|'.join([x for x in CHROMOSOMES])

localrules: create_tmp_dir, write_qualimap_multiqc_file, create_bam_list, region_files_forFreebayes

include: 'rules/common.smk'

raw_read_dict = create_raw_read_dict(RAW_READ_DIR, SAMPLES)

rule all:
   input:
        # Trimming, mapping, and QC
        '{0}/multiqc/multiqc_report.html'.format(QC_DIR), 
        # Variant calling
        #expand('{0}/{{chrom}}_{{node}}_forFreebayes.regions'.format(PROGRAM_RESOURCE_DIR), chrom=CHROMOSOMES, node=NODES)
        expand('{0}/{{chrom}}_regions'.format(PROGRAM_RESOURCE_DIR), chrom=CHROMOSOMES)
        #expand('{0}/vcf/{{chrom}}/{{chrom}}_allSamples_{{site_type}}_sorted.vcf.{{ext}}'.format(VARIANT_DIR), chrom=CHROMOSOMES, site_type=['snps', 'indels', 'invariant', 'mnps', 'other'], ext = ['gz', 'gz.tbi']),
        #expand('{0}/zarr_db/{{chrom}}/{{chrom}}_allSamples_{{site_type}}_sorted.zarr'.format(VARIANT_DIR), chrom=CHROMOSOMES, site_type=['snps', 'invariant'])

rule create_tmp_dir:
    output: directory(TMPDIR)
    shell: 'mkdir {output}'

include: 'rules/trimming.smk'
include: 'rules/mapping.smk'
include: 'rules/qc.smk'
include: 'rules/variant_calling.smk'

rule clean:
    params:
        'logs {0} {1}/* {2} fastp.json'.format(config['results_prefix'], TRIMMED_READ_DIR, TMPDIR)
    shell:
        'rm -rfv {params}'
