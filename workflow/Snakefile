import os
import glob
import pandas as pd
from snakemake.utils import min_version

min_version('5.26.1')

#container: 'continuumio/miniconda3:4.9.1'

configfile: '../config/config.yaml'

SAMPLES = pd.read_table(config['samples'])['Sample'].tolist()
CHROMOSOMES = pd.read_table(config['chromosomes'], header=None).iloc[:,0].tolist()

TMPDIR = config['paths']['temp_dir']
RAW_READ_DIR = '{0}/raw_fastq'.format(config['data_prefix'])
TRIMMED_READ_DIR = '{0}/trimmed_reads'.format(config['data_prefix'])
QC_DIR = '{0}/qc'.format(config['results_prefix'])
BAM_DIR = '{0}/bam'.format(config['results_prefix'])
VARIANT_DIR = '{0}/variants'.format(config['results_prefix'])
PROGRAM_RESOURCE_DIR = '{0}/program_resources'.format(config['results_prefix'])
FLAG_FILES_DIR = '{0}/flag_files'.format(config['results_prefix'])

REFERENCE_GENOME = config['files']['reference_genome']

REPRESENTATIVE_SAMPLE = config['variant_calling']['sample']
NUM_REGIONS_PER_CHROM = config['variant_calling']['num_regions_per_chrom']

wildcard_constraints:
    chrom='|'.join([x for x in CHROMOSOMES])

localrules: create_tmp_dir, write_qualimap_multiqc_file, concat_regions_freebayes, create_bam_list

include: 'rules/common.smk'

raw_read_dict = create_raw_read_dict(RAW_READ_DIR, SAMPLES)

rule all:
   input:
       # QC of raw reads
       expand('{0}/fastqc_raw_reads/{{sample}}_{{read}}_fastqc.{{ext}}'.format(QC_DIR), sample=SAMPLES, read=['1', '2'], ext=['html', 'zip']),
        # Trim reads
        expand('{0}/{{sample}}/{{sample}}_trimmed_{{read}}.fq.gz'.format(TRIMMED_READ_DIR), sample=SAMPLES, read=['1', '2', 'unpaired']),
        expand('{0}/fastp_trim_reports/{{sample}}_fastp.html'.format(QC_DIR), sample=SAMPLES),
        # QC of trimmed reads
        expand('{0}/fastqc_trimmed_reads/{{sample}}_trimmed_{{read}}_fastqc.{{ext}}'.format(QC_DIR), sample=SAMPLES, read=['1', '2'], ext=['html', 'zip']),
        # Mapping reads
        expand('{0}/final/{{sample}}_merged_sorted_dupsMarked.{{ext}}'.format(BAM_DIR), sample=SAMPLES, ext=['bam', 'bam.bai']),
        # BAM QC
        '{0}/qualimap/qualimap_multiqc'.format(QC_DIR),
        expand('{0}/bamutil_validate/{{sample}}_validation.txt'.format(QC_DIR), sample=SAMPLES),
        # Variant calling
        '{0}/wholeGenome_forFreebayes.regions'.format(PROGRAM_RESOURCE_DIR),
        '{0}/freebayes_bams.list'.format(PROGRAM_RESOURCE_DIR),
        expand('{0}/vcf/wholeGenome_allSamples_{{site_type}}_sorted.vcf.{{ext}}'.format(VARIANT_DIR), site_type=['snps', 'indels', 'invariant', 'mnps', 'other', 'allSites'], ext = ['gz', 'gz.tbi']),
        expand('{0}/zarr_db/wholeGenome_allSamples_{{site_type}}_sorted.zarr'.format(VARIANT_DIR), site_type=['snps', 'invariant'])

rule create_tmp_dir:
    output: directory(TMPDIR)
    shell: 'mkdir {output}'

include: 'rules/qc_raw_reads.smk'
include: 'rules/trimming.smk'
include: 'rules/qc_trimmed_reads.smk'
include: 'rules/mapping.smk'
include: 'rules/qc_bams.smk'
include: 'rules/variant_calling.smk'

rule clean:
    params:
        'logs {0} {1}/* {2} fastp.json'.format(config['results_prefix'], TRIMMED_READ_DIR, TMPDIR)
    shell:
        'rm -rfv {params}'
